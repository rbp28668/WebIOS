{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../p3dcmd.service\";\nimport * as i2 from \"../cmdbutton/cmdbutton.component\";\nexport class AircraftComponent {\n  constructor(p3dcmd) {\n    this.p3dcmd = p3dcmd;\n  }\n  ngOnInit() {}\n  logFailure(data) {\n    console.log(\"Failed: \" + data.reason + data.code);\n  }\n  // Use this to update the altimeter setting button when the hPa field changes.\n  updatehPaCmd(button, hPa) {\n    button.cmd = \"cmd/KOHLSMAN_SET?value=\" + 16 * Number(hPa);\n  }\n  sendControlValue(cmd, value) {\n    var movement = -parseInt(value);\n    var cmd = \"cmd/\" + cmd + \"?value=\" + movement.toFixed();\n    this.p3dcmd.runCommand(cmd).subscribe(data => {\n      if (data.status !== \"OK\") {\n        this.logFailure(data);\n      }\n    }, err => {\n      console.log(\"Error sending command\");\n      console.log(err);\n    });\n  }\n}\nAircraftComponent.ɵfac = function AircraftComponent_Factory(t) {\n  return new (t || AircraftComponent)(i0.ɵɵdirectiveInject(i1.P3dcmdService));\n};\nAircraftComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AircraftComponent,\n  selectors: [[\"app-aircraft\"]],\n  decls: 97,\n  vars: 0,\n  consts: [[1, \"solid\", 2, \"display\", \"inline\"], [\"caption\", \"Up\", \"cmd\", \"cmd/FLAPS_UP\"], [\"caption\", \"1\", \"cmd\", \"cmd/FLAPS_1\"], [\"caption\", \"2\", \"cmd\", \"cmd/FLAPS_1\"], [\"caption\", \"3\", \"cmd\", \"cmd/FLAPS_3\"], [\"caption\", \"4\", \"cmd\", \"cmd/FLAPS_4\"], [\"caption\", \"Down\", \"cmd\", \"cmd/FLAPS_DOWN\"], [\"caption\", \"Up\", \"cmd\", \"cmd/ELEV_TRIM_UP\"], [\"caption\", \"Down\", \"cmd\", \"cmd/ELEV_TRIM_DN\"], [\"caption\", \"On\", \"cmd\", \"cmd/SPOILERS_ON\"], [\"caption\", \"Off\", \"cmd\", \"cmd/SPOILERS_OFF\"], [\"caption\", \"Up\", \"cmd\", \"cmd/GEAR_UP\"], [\"caption\", \"Down\", \"cmd\", \"cmd/GEAR_DOWN\"], [\"caption\", \"Baro\", \"cmd\", \"cmd/BAROMETRIC\"], [\"caption\", \"Inc\", \"cmd\", \"cmd/KOHLSMAN_INC\"], [\"caption\", \"Dec\", \"cmd\", \"cmd/KOHLSMAN_DEC\"], [1, \"inputfield\"], [\"for\", \"hPa\", 2, \"font-size\", \"20px\", \"margin-left\", \"50px\"], [\"type\", \"number\", \"min\", \"900\", \"max\", \"1100\", \"name\", \"hPa\", \"id\", \"hPa\", \"value\", \"1013\", 2, \"font-size\", \"20px\", \"margin-left\", \"20px\", \"margin-right\", \"20px\", 3, \"change\"], [\"hPa\", \"\"], [\"caption\", \"Set\", \"cmd\", \"cmd/KOHLSMAN_SET?value=16208\"], [\"kohlsman_set\", \"\"], [1, \"solid\"], [\"for\", \"aileron\"], [\"type\", \"range\", \"min\", \"-16383\", \"max\", \"16383\", \"value\", \"0\", \"id\", \"aileron\", 1, \"slider\", 3, \"input\"], [\"aileron\", \"\"], [\"for\", \"elevator\"], [\"type\", \"range\", \"min\", \"-16383\", \"max\", \"16383\", \"value\", \"0\", \"id\", \"elevator\", 1, \"slider\", 3, \"input\"], [\"elevator\", \"\"], [\"for\", \"rudder\"], [\"type\", \"range\", \"min\", \"-16383\", \"max\", \"16383\", \"value\", \"0\", \"id\", \"rudder\", 1, \"slider\", 3, \"input\"], [\"rudder\", \"\"], [\"caption\", \"Toggle blocked Pitot\", \"cmd\", \"cmd/TOGGLE_PITOT_BLOCKAGE\"], [\"caption\", \"Toggle blocked Static\", \"cmd\", \"cmd/TOGGLE_STATIC_PORT_BLOCKAGE\"], [\"caption\", \"Toggle wheel brake failure\", \"cmd\", \"cmd/TOGGLE_TOTAL_BRAKE_FAILURE\"], [\"caption\", \"Toggle electrical failure\", \"cmd\", \"cmd/TOGGLE_ELECTRICAL_FAILURE\"], [\"caption\", \"Toggle engine failure\", \"cmd\", \"cmd/TOGGLE_ENGINE1_FAILURE\"], [\"caption\", \"Auto Start\", \"cmd\", \"cmd/ENGINE_AUTO_START\"], [\"caption\", \"Auto Shutdown\", \"cmd\", \"cmd/ENGINE_AUTO_SHUTDOWN\"], [\"caption\", \"Throttle Cut\", \"cmd\", \"cmd/THROTTLE_CUT\"], [\"caption\", \"Throttle Down\", \"cmd\", \"cmd/THROTTLE_DECR\"], [\"caption\", \"Throttle Up\", \"cmd\", \"cmd/THROTTLE_INCR\"], [\"caption\", \"Throttle Full\", \"cmd\", \"cmd/THROTTLE_FULL\"], [\"caption\", \"Autorudder toggle\", \"cmd\", \"cmd/AUTORUDDER_TOGGLE\"], [\"caption\", \"Freeze Altitude Toggle\", \"cmd\", \"cmd/FREEZE_ALTITUDE_TOGGLE\"], [\"caption\", \"Freeze Altitude Set\", \"cmd\", \"cmd/FREEZE_ALTITUDE_SET\"], [\"caption\", \"Reset G Meter\", \"cmd\", \"cmd/RESET_G_FORCE_INDICATOR\"], [\"caption\", \"Toggle Water Ballast Valve\", \"cmd\", \"cmd/TOGGLE_WATER_BALLAST_VALVE\"], [\"caption\", \"Toggle Vario\", \"cmd\", \"cmd/TOGGLE_VARIOMETER_SWITCH\"], [\"caption\", \"Toggle Turn Indicator\", \"cmd\", \"cmd/TOGGLE_TURN_INDICATOR_SWITCH\"], [\"caption\", \"Toggle Pause\", \"cmd\", \"cmd/PAUSE_TOGGLE\"], [\"caption\", \"Pause On\", \"cmd\", \"cmd/PAUSE_ON\"], [\"caption\", \"Pause Off\", \"cmd\", \"cmd/PAUSE_OFF\"], [\"caption\", \"Save Scenario\", \"cmd\", \"cmd/SITUATION_SAVE\"], [\"caption\", \"Reset Scenario\", \"cmd\", \"cmd/SITUATION_RESET\"], [\"caption\", \"Toggle Aircraft Labels\", \"cmd\", \"cmd/TOGGLE_AIRCRAFT_LABELS\"], [\"caption\", \"Reset Sim\", \"cmd\", \"cmd/SIM_RESET\"], [\"caption\", \"Refresh Scenery\", \"cmd\", \"cmd/REFRESH_SCENERY\"], [\"caption\", \"Capture Screenshot\", \"cmd\", \"cmd/CAPTURE_SCREENSHOT\"], [\"caption\", \"Exit\", \"cmd\", \"cmd/EXIT\"], [\"caption\", \"Abort\", \"cmd\", \"cmd/ABORT\"]],\n  template: function AircraftComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r5 = i0.ɵɵgetCurrentView();\n      i0.ɵɵelementStart(0, \"div\")(1, \"fieldset\", 0)(2, \"legend\");\n      i0.ɵɵtext(3, \"Flaps\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(4, \"cmd-button\", 1)(5, \"cmd-button\", 2)(6, \"cmd-button\", 3)(7, \"cmd-button\", 4)(8, \"cmd-button\", 5)(9, \"cmd-button\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"fieldset\", 0)(11, \"legend\");\n      i0.ɵɵtext(12, \"Elevator Trim\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(13, \"cmd-button\", 7)(14, \"cmd-button\", 8);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"fieldset\", 0)(16, \"legend\");\n      i0.ɵɵtext(17, \"Spoilers\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(18, \"cmd-button\", 9)(19, \"cmd-button\", 10);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(20, \"fieldset\", 0)(21, \"legend\");\n      i0.ɵɵtext(22, \"Gear\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(23, \"cmd-button\", 11)(24, \"cmd-button\", 12);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(25, \"fieldset\", 0)(26, \"legend\");\n      i0.ɵɵtext(27, \"Altimeter\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(28, \"cmd-button\", 13)(29, \"cmd-button\", 14)(30, \"cmd-button\", 15);\n      i0.ɵɵelementStart(31, \"div\", 16)(32, \"label\", 17);\n      i0.ɵɵtext(33, \"hPa\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(34, \"input\", 18, 19);\n      i0.ɵɵlistener(\"change\", function AircraftComponent_Template_input_change_34_listener() {\n        i0.ɵɵrestoreView(_r5);\n        const _r1 = i0.ɵɵreference(37);\n        const _r0 = i0.ɵɵreference(35);\n        return i0.ɵɵresetView(ctx.updatehPaCmd(_r1, _r0.value));\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(36, \"cmd-button\", 20, 21);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(38, \"fieldset\", 22)(39, \"legend\");\n      i0.ɵɵtext(40, \"Primary Control\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(41, \"div\", 16)(42, \"label\", 23);\n      i0.ɵɵtext(43, \"Aileron\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(44, \"input\", 24, 25);\n      i0.ɵɵlistener(\"input\", function AircraftComponent_Template_input_input_44_listener() {\n        i0.ɵɵrestoreView(_r5);\n        const _r2 = i0.ɵɵreference(45);\n        return i0.ɵɵresetView(ctx.sendControlValue(\"AILERON_SET\", _r2.value));\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(46, \"div\", 16)(47, \"label\", 26);\n      i0.ɵɵtext(48, \"Elevator\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(49, \"input\", 27, 28);\n      i0.ɵɵlistener(\"input\", function AircraftComponent_Template_input_input_49_listener() {\n        i0.ɵɵrestoreView(_r5);\n        const _r3 = i0.ɵɵreference(50);\n        return i0.ɵɵresetView(ctx.sendControlValue(\"ELEVATOR_SET\", _r3.value));\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(51, \"div\", 16)(52, \"label\", 29);\n      i0.ɵɵtext(53, \"Rudder\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(54, \"input\", 30, 31);\n      i0.ɵɵlistener(\"input\", function AircraftComponent_Template_input_input_54_listener() {\n        i0.ɵɵrestoreView(_r5);\n        const _r4 = i0.ɵɵreference(55);\n        return i0.ɵɵresetView(ctx.sendControlValue(\"RUDDER_SET\", _r4.value));\n      });\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(56, \"fieldset\", 22)(57, \"legend\");\n      i0.ɵɵtext(58, \"Fail\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(59, \"cmd-button\", 32)(60, \"cmd-button\", 33)(61, \"cmd-button\", 34)(62, \"cmd-button\", 35)(63, \"cmd-button\", 36);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(64, \"fieldset\", 22)(65, \"legend\");\n      i0.ɵɵtext(66, \"Engine\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(67, \"cmd-button\", 37)(68, \"cmd-button\", 38)(69, \"cmd-button\", 39)(70, \"cmd-button\", 40)(71, \"cmd-button\", 41)(72, \"cmd-button\", 42);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(73, \"fieldset\", 22)(74, \"legend\");\n      i0.ɵɵtext(75, \"Misc\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(76, \"cmd-button\", 43)(77, \"cmd-button\", 44)(78, \"cmd-button\", 45)(79, \"cmd-button\", 46)(80, \"cmd-button\", 47)(81, \"cmd-button\", 48)(82, \"cmd-button\", 49);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(83, \"fieldset\", 22)(84, \"legend\");\n      i0.ɵɵtext(85, \"Sim\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(86, \"cmd-button\", 50)(87, \"cmd-button\", 51)(88, \"cmd-button\", 52)(89, \"cmd-button\", 53)(90, \"cmd-button\", 54)(91, \"cmd-button\", 55)(92, \"cmd-button\", 56)(93, \"cmd-button\", 57)(94, \"cmd-button\", 58)(95, \"cmd-button\", 59)(96, \"cmd-button\", 60);\n      i0.ɵɵelementEnd()();\n    }\n  },\n  dependencies: [i2.CmdbuttonComponent],\n  styles: [\"input.slider[_ngcontent-%COMP%]{width:60%}@media (max-width: 600px){input.slider[_ngcontent-%COMP%]{width:100%}}\"]\n});","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}