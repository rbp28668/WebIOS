{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../p3dcmd.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction RecordingComponent_option_33_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const r_r6 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(r_r6);\n  }\n}\nexport class RecordingComponent {\n  constructor(p3dcmd) {\n    this.p3dcmd = p3dcmd;\n    this.recordings = [];\n  }\n  logFailure(data) {\n    console.log(\"Failed: \" + data.reason + data.code);\n  }\n  // Initialise the model.\n  ngOnInit() {\n    console.log(\"Recording component ngOnInit\");\n    this.loadRecordings();\n  }\n  loadRecordings() {\n    this.p3dcmd.recordList().subscribe(data => {\n      // Process resulting list\n      if (data.status === \"OK\") {\n        data.recordings.forEach(item => {\n          console.log(item.recording);\n          this.recordings.push(item.recording);\n        });\n      } else {\n        // failed\n        this.logFailure(data);\n      }\n    }, err => {\n      console.log(\"Error fetching recordings\");\n      console.log(err);\n    });\n  }\n  // Note analyse also needs to pull back the generated bitmap(s) from Pictures/Prepar3D V4 Files\n  analyse() {\n    this.p3dcmd.recordAnalyse().subscribe(data => {\n      if (data.status !== \"OK\") {\n        this.logFailure(data);\n      }\n    }, err => {\n      console.log(\"Error fetching scenarios\");\n      console.log(err);\n    });\n  }\n  getRecordings() {\n    return this.recordings;\n  }\n  playRecording(name) {\n    this.p3dcmd.recordPlay(name).subscribe(data => {\n      if (data.status !== \"OK\") {\n        this.logFailure(data);\n      }\n    }, err => {\n      console.log(\"Error playing recording\");\n      console.log(err);\n    });\n  }\n  startRecording(start_button, stop_button) {\n    this.p3dcmd.recordStart().subscribe(data => {\n      if (data.status === \"OK\") {\n        start_button.disabled = true;\n        stop_button.disabled = false;\n      } else {\n        this.logFailure(data);\n      }\n    }, err => {\n      console.log(\"Error starting recording\");\n      console.log(err);\n    });\n  }\n  stopRecording(title, description, start_button, stop_button) {\n    this.p3dcmd.recordStop(title, description).subscribe(data => {\n      if (data.status !== \"OK\") {\n        this.logFailure(data);\n      }\n    }, err => {\n      console.log(\"Error playing recording\");\n      console.log(err);\n    });\n    // Update buttons regardless of whether function succeeded or not.  Makes sure we don't get stuck in recording state.\n    start_button.disabled = false;\n    stop_button.disabled = true;\n  }\n}\nRecordingComponent.ɵfac = function RecordingComponent_Factory(t) {\n  return new (t || RecordingComponent)(i0.ɵɵdirectiveInject(i1.P3dcmdService));\n};\nRecordingComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: RecordingComponent,\n  selectors: [[\"app-recording\"]],\n  decls: 36,\n  vars: 1,\n  consts: [[1, \"top-container\"], [1, \"action\", 3, \"click\"], [1, \"solid\"], [\"start_button\", \"\"], [1, \"inputfield\"], [\"for\", \"title\"], [\"type\", \"text\", \"id\", \"title\", \"placeholder\", \"title\", 2, \"font-size\", \"20px\"], [\"title\", \"\"], [\"for\", \"description\"], [\"type\", \"text\", \"id\", \"description\", \"placeholder\", \"description\", 2, \"font-size\", \"20px\"], [\"description\", \"\"], [\"disabled\", \"true\", 1, \"action\", 3, \"click\"], [\"stop_button\", \"\"], [2, \"display\", \"inline-block\"], [\"for\", \"recording\"], [\"id\", \"recording\", 2, \"font-size\", \"20px\"], [\"recording\", \"\"], [4, \"ngFor\", \"ngForOf\"]],\n  template: function RecordingComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r7 = i0.ɵɵgetCurrentView();\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h1\");\n      i0.ɵɵtext(2, \"Recording\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"button\", 1);\n      i0.ɵɵlistener(\"click\", function RecordingComponent_Template_button_click_3_listener() {\n        return ctx.analyse();\n      });\n      i0.ɵɵtext(4, \"Analyse\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"fieldset\", 2)(6, \"legend\");\n      i0.ɵɵtext(7, \"Record\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"button\", 1, 3);\n      i0.ɵɵlistener(\"click\", function RecordingComponent_Template_button_click_8_listener() {\n        i0.ɵɵrestoreView(_r7);\n        const _r0 = i0.ɵɵreference(9);\n        const _r3 = i0.ɵɵreference(22);\n        return i0.ɵɵresetView(ctx.startRecording(_r0, _r3));\n      });\n      i0.ɵɵtext(10, \"Start\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"div\", 4)(12, \"label\", 5);\n      i0.ɵɵtext(13, \"Title\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(14, \"input\", 6, 7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"div\", 4)(17, \"label\", 8);\n      i0.ɵɵtext(18, \"Description\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(19, \"input\", 9, 10);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(21, \"button\", 11, 12);\n      i0.ɵɵlistener(\"click\", function RecordingComponent_Template_button_click_21_listener() {\n        i0.ɵɵrestoreView(_r7);\n        const _r1 = i0.ɵɵreference(15);\n        const _r2 = i0.ɵɵreference(20);\n        const _r0 = i0.ɵɵreference(9);\n        const _r3 = i0.ɵɵreference(22);\n        return i0.ɵɵresetView(ctx.stopRecording(_r1.value, _r2.value, _r0, _r3));\n      });\n      i0.ɵɵtext(23, \"Finish and Save\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(24, \"fieldset\", 2)(25, \"legend\");\n      i0.ɵɵtext(26, \"Load Recording\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(27, \"div\", 13)(28, \"div\", 4)(29, \"label\", 14);\n      i0.ɵɵtext(30, \"Recording\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(31, \"select\", 15, 16);\n      i0.ɵɵtemplate(33, RecordingComponent_option_33_Template, 2, 1, \"option\", 17);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(34, \"button\", 1);\n      i0.ɵɵlistener(\"click\", function RecordingComponent_Template_button_click_34_listener() {\n        i0.ɵɵrestoreView(_r7);\n        const _r4 = i0.ɵɵreference(32);\n        return i0.ɵɵresetView(ctx.playRecording(_r4.value));\n      });\n      i0.ɵɵtext(35, \"Launch\");\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(33);\n      i0.ɵɵproperty(\"ngForOf\", ctx.getRecordings());\n    }\n  },\n  dependencies: [i2.NgForOf, i3.NgSelectOption, i3.ɵNgSelectMultipleOption]\n});","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}