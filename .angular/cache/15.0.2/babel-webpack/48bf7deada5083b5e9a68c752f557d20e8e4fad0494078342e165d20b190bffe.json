{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../p3dcmd.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"../cmdbutton/cmdbutton.component\";\nfunction WeatherComponent_option_24_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 129);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const a_r36 = ctx.$implicit;\n    i0.ɵɵpropertyInterpolate(\"value\", a_r36.name);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(a_r36.title);\n  }\n}\nfunction WeatherComponent_option_187_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const station_r37 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", station_r37, \" \");\n  }\n}\nconst _c0 = function () {\n  return {\n    tablinks: true,\n    active: true\n  };\n};\nconst _c1 = function () {\n  return {\n    tablinks: true,\n    active: false\n  };\n};\nconst _c2 = function () {\n  return {\n    tabcontent: true,\n    tabcontent_active: true\n  };\n};\nconst _c3 = function () {\n  return {\n    tabcontent: true,\n    tabcontent_active: false\n  };\n};\nclass Theme {\n  constructor(name, title, description) {\n    this.name = name;\n    this.title = title;\n    this.description = description;\n  }\n}\nexport class WeatherComponent {\n  constructor(p3dcmd) {\n    this.p3dcmd = p3dcmd;\n    this.themes = [];\n    this.globalMetar = \"\";\n    this.stations = [];\n  }\n  ngOnInit() {\n    this.loadThemes();\n    this.loadGlobalMetar();\n    let s = this.stations; // for closure below\n    this.fetchStations(function (station) {\n      console.log(station);\n      s.push(station.icao);\n    });\n  }\n  logFailure(data) {\n    console.log(\"Failed: \" + data.reason + data.code);\n  }\n  getThemes() {\n    return this.themes;\n  }\n  getStations() {\n    return this.stations;\n  }\n  loadThemes() {\n    this.p3dcmd.weatherThemes().subscribe(data => {\n      if (data.status === \"OK\") {\n        for (let t of data.themes) {\n          let theme = new Theme(t.name, t.title, t.description);\n          this.themes.push(theme);\n        }\n      } else {\n        this.logFailure(data);\n      }\n    }, err => {\n      console.log(\"Error fetching weather themes\");\n      console.log(err);\n    });\n  }\n  loadGlobalMetar(display) {\n    this.p3dcmd.weatherRequestGlobal().subscribe(data => {\n      if (data.status === \"OK\") {\n        this.globalMetar = data.metar;\n        if (display) {\n          display.innerHTML = data.metar;\n        }\n      } else {\n        this.logFailure(data);\n      }\n    }, err => {\n      console.log(\"Error getting global metar\");\n      console.log(err);\n    });\n  }\n  refresh(display) {\n    this.p3dcmd.weatherRefresh().subscribe(data => {\n      if (data.status === \"OK\") {\n        this.loadGlobalMetar(display);\n      } else {\n        this.logFailure(data);\n      }\n    }, err => {\n      console.log(\"Error refreshing weather\");\n      console.log(err);\n    });\n  }\n  setTheme(name) {\n    this.p3dcmd.weatherSetTheme(name).subscribe(data => {\n      if (data.status !== \"OK\") {\n        this.logFailure(data);\n      }\n    }, err => {\n      console.log(\"Error setting weather theme\");\n      console.log(err);\n    });\n  }\n  themeSelected(selected, text) {\n    for (let t of this.themes) {\n      if (t.name === selected) {\n        text.value = t.description;\n      }\n    }\n  }\n  useGlobal() {\n    this.p3dcmd.weatherUseGlobal().subscribe(data => {\n      if (data.status !== \"OK\") {\n        this.logFailure(data);\n      }\n    }, err => {\n      console.log(\"Error setting global weather\");\n      console.log(err);\n    });\n  }\n  getGlobalMetar() {\n    return this.globalMetar;\n  }\n  setGlobalWind(windspeed, direction, gusts, turbulence, windshear) {\n    this.p3dcmd.weatherSetGlobalSurfaceWind(parseFloat(windspeed), parseFloat(direction), parseFloat(gusts), 350, turbulence, windshear).subscribe(data => {\n      if (data.status !== \"OK\") {\n        this.logFailure(data);\n      }\n    }, err => {\n      console.log(\"Error setting global wind\");\n      console.log(err);\n    });\n  }\n  setGlobalVisibility(visibility) {\n    this.p3dcmd.weatherSetGlobalVisibility(parseFloat(visibility)).subscribe(data => {\n      if (data.status !== \"OK\") {\n        this.logFailure(data);\n      }\n    }, err => {\n      console.log(\"Error setting global visibility\");\n      console.log(err);\n    });\n  }\n  setGlobalRVR(runway, rvr) {\n    this.p3dcmd.weatherSetGlobalRVR(runway, parseFloat(rvr)).subscribe(data => {\n      if (data.status !== \"OK\") {\n        this.logFailure(data);\n      }\n    }, err => {\n      console.log(\"Error setting global RVR\");\n      console.log(err);\n    });\n  }\n  setGlobalPresentConditions(intensity, vicinity, descriptor, phenomena) {\n    this.p3dcmd.weatherSetGlobalPresentConditions(intensity, vicinity === \"on\", descriptor, phenomena).subscribe(data => {\n      if (data.status !== \"OK\") {\n        this.logFailure(data);\n      }\n    }, err => {\n      console.log(\"Error setting global present conditions\");\n      console.log(err);\n    });\n  }\n  setGlobalPartialObscuration(partialobs) {\n    this.p3dcmd.weatherSetGlobalPartialObscuration(partialobs).subscribe(data => {\n      if (data.status !== \"OK\") {\n        this.logFailure(data);\n      }\n    }, err => {\n      console.log(\"Error setting global partial obscuration\");\n      console.log(err);\n    });\n  }\n  setGlobalSkyConditions(eights, cloudtype, cloudheight) {\n    var cloudcover = parseInt(eights).toFixed() + cloudtype;\n    this.p3dcmd.weatherSetGlobalSkyConditions(parseFloat(cloudheight) / 100, cloudcover).subscribe(data => {\n      if (data.status !== \"OK\") {\n        this.logFailure(data);\n      }\n    }, err => {\n      console.log(\"Error setting global sky conditions\");\n      console.log(err);\n    });\n  }\n  setGlobalTemperature(temp, dewpoint) {\n    this.p3dcmd.weatherSetGlobalTemperature(parseFloat(temp), parseFloat(dewpoint)).subscribe(data => {\n      if (data.status !== \"OK\") {\n        this.logFailure(data);\n      }\n    }, err => {\n      console.log(\"Error setting global temperature\");\n      console.log(err);\n    });\n  }\n  setGlobalQNH(qnh) {\n    this.p3dcmd.weatherSetGlobalQNH(parseFloat(qnh)).subscribe(data => {\n      if (data.status !== \"OK\") {\n        this.logFailure(data);\n      }\n    }, err => {\n      console.log(\"Error setting global QNH\");\n      console.log(err);\n    });\n  }\n  useCustom() {\n    this.p3dcmd.weatherUseCustom().subscribe(data => {\n      if (data.status !== \"OK\") {\n        this.logFailure(data);\n      }\n    }, err => {\n      console.log(\"Error setting custom weather\");\n      console.log(err);\n    });\n  }\n  // Update a select element with the list of custom stations.\n  updateStations(stationList) {\n    this.fetchStations(function (s) {\n      stationList.add(new Option(s.icao, s.icao, false, false));\n    });\n  }\n  // Gets custom stations and passes them to a handler function.\n  fetchStations(handle) {\n    this.p3dcmd.weatherStations().subscribe(data => {\n      if (data.status === \"OK\") {\n        for (let s of data.stations) {\n          handle(s);\n        }\n      } else {\n        this.logFailure(data);\n      }\n    }, err => {\n      console.log(\"Error updating weather stations\");\n      console.log(err);\n    });\n  }\n  addCustom(station, stationList) {\n    this.p3dcmd.weatherAddStation(station).subscribe(data => {\n      if (data.status === \"OK\") {\n        this.refreshStations(stationList);\n      } else {\n        this.logFailure(data);\n      }\n    }, err => {\n      console.log(\"Error adding weather station\");\n      console.log(err);\n    });\n  }\n  addCustomHere(station, friendlyName, stationList) {\n    this.p3dcmd.weatherAddStationHere(station, friendlyName).subscribe(data => {\n      if (data.status === \"OK\") {\n        this.refreshStations(stationList);\n      } else {\n        this.logFailure(data);\n      }\n    }, err => {\n      console.log(\"Error adding weather station here\");\n      console.log(err);\n    });\n  }\n  refreshStations(stationList) {\n    this.p3dcmd.weatherRefresh().subscribe(data => {\n      if (data.status === \"OK\") {\n        if (stationList) {\n          this.updateStations(stationList);\n        }\n      } else {\n        this.logFailure(data);\n      }\n    }, err => {\n      console.log(\"Error refreshing weather stations\");\n      console.log(err);\n    });\n  }\n  setCustomWind(station, windspeed, direction, gusts, turbulence, windshear) {\n    this.p3dcmd.weatherSetSurfaceWind(station, parseFloat(windspeed), parseFloat(direction), parseFloat(gusts), 350, turbulence, windshear).subscribe(data => {\n      if (data.status !== \"OK\") {\n        this.logFailure(data);\n      }\n    }, err => {\n      console.log(\"Error setting custom wind\");\n      console.log(err);\n    });\n  }\n  setCustomVisibility(station, visibility) {\n    this.p3dcmd.weatherSetVisibility(station, parseFloat(visibility)).subscribe(data => {\n      if (data.status !== \"OK\") {\n        this.logFailure(data);\n      }\n    }, err => {\n      console.log(\"Error setting custom visibility\");\n      console.log(err);\n    });\n  }\n  setCustomRVR(station, runway, rvr) {\n    this.p3dcmd.weatherSetRVR(station, runway, parseFloat(rvr)).subscribe(data => {\n      if (data.status !== \"OK\") {\n        this.logFailure(data);\n      }\n    }, err => {\n      console.log(\"Error setting custom RVR\");\n      console.log(err);\n    });\n  }\n  setCustomPresentConditions(station, intensity, vicinity, descriptor, phenomena) {\n    this.p3dcmd.weatherSetPresentConditions(station, intensity, vicinity === \"on\", descriptor, phenomena).subscribe(data => {\n      if (data.status !== \"OK\") {\n        this.logFailure(data);\n      }\n    }, err => {\n      console.log(\"Error setting custom present conditions\");\n      console.log(err);\n    });\n  }\n  setCustomPartialObscuration(station, partialobs) {\n    this.p3dcmd.weatherSetPartialObsucration(station, partialobs).subscribe(data => {\n      if (data.status !== \"OK\") {\n        this.logFailure(data);\n      }\n    }, err => {\n      console.log(\"Error setting custom partial obscuration\");\n      console.log(err);\n    });\n  }\n  setCustomSkyConditions(station, eights, cloudtype, cloudheight, transition) {\n    let cloudcover = parseInt(eights).toFixed() + cloudtype;\n    this.p3dcmd.weatherSetSkyConditions(station, parseFloat(cloudheight) / 100, cloudcover, parseFloat(transition)).subscribe(data => {\n      if (data.status !== \"OK\") {\n        this.logFailure(data);\n      }\n    }, err => {\n      console.log(\"Error setting custom sky conditions\");\n      console.log(err);\n    });\n  }\n  setCustomTemperature(station, temp, dewpoint) {\n    this.p3dcmd.weatherSetTemperature(station, parseFloat(temp), parseFloat(dewpoint)).subscribe(data => {\n      if (data.status !== \"OK\") {\n        this.logFailure(data);\n      }\n    }, err => {\n      console.log(\"Error setting custom temperature\");\n      console.log(err);\n    });\n  }\n  setCustomQNH(station, qnh) {\n    this.p3dcmd.weatherSetQNH(station, parseFloat(qnh)).subscribe(data => {\n      if (data.status !== \"OK\") {\n        this.logFailure(data);\n      }\n    }, err => {\n      console.log(\"Error setting custom QNH\");\n      console.log(err);\n    });\n  }\n  selectTab(evt, tabName) {\n    // Declare all variables\n    var i, tabcontent, tablinks;\n    // Get all active elements with class=\"tabcontent\" and hide them\n    tabcontent = document.getElementsByClassName(\"tabcontent_active\");\n    for (i = 0; i < tabcontent.length; i++) {\n      tabcontent[i].className = \"tabcontent\";\n    }\n    // Get all elements with class=\"tablinks\" and remove the class \"active\"\n    tablinks = document.getElementsByClassName(\"tablinks\");\n    for (i = 0; i < tablinks.length; i++) {\n      tablinks[i].className = tablinks[i].className.replace(\" active\", \"\");\n    }\n    // Show the current tab, and add an \"active\" class to the button that opened the tab\n    let element = document.getElementById(tabName);\n    if (element != null) element.className += \"_active\";\n    let target = evt.currentTarget;\n    if (target != null) target.className += \" active\";\n  }\n}\nWeatherComponent.ɵfac = function WeatherComponent_Factory(t) {\n  return new (t || WeatherComponent)(i0.ɵɵdirectiveInject(i1.P3dcmdService));\n};\nWeatherComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: WeatherComponent,\n  selectors: [[\"app-weather\"]],\n  decls: 354,\n  vars: 15,\n  consts: [[1, \"top-container\"], [1, \"solid\"], [\"caption\", \"Normal\", \"cmd\", \"/thermal/drop\"], [\"caption\", \"Space Elevator\", \"cmd\", \"/thermal/drop?radius=1000&height=4000&rate=5\"], [1, \"filler\"], [1, \"tab\"], [3, \"ngClass\", \"click\"], [\"id\", \"themetab\", 3, \"ngClass\"], [1, \"inputfield\"], [\"for\", \"themes\"], [\"id\", \"themes\", 3, \"change\"], [\"themes\", \"\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"id\", \"theme_description\", \"disabled\", \"true\"], [\"description\", \"\"], [1, \"action\", 3, \"click\"], [\"id\", \"globaltab\", 3, \"ngClass\"], [\"globalMetar\", \"\"], [\"for\", \"gwinddirn\"], [\"type\", \"number\", \"id\", \"gwinddirn\"], [\"gwinddirn\", \"\"], [\"for\", \"gwindspeed\"], [\"type\", \"number\", \"id\", \"gwindspeed\"], [\"gwindspeed\", \"\"], [\"for\", \"ggusts\"], [\"type\", \"number\", \"id\", \"ggusts\"], [\"ggusts\", \"\"], [\"for\", \"gturbulence\"], [\"id\", \"gturbulence\"], [\"gturbulence\", \"\"], [\"value\", \"N\"], [\"value\", \"L\"], [\"value\", \"M\"], [\"value\", \"H\"], [\"value\", \"S\"], [\"for\", \"gwindshear\"], [\"id\", \"gwindshear\"], [\"gwindshear\", \"\"], [\"value\", \"G\"], [\"value\", \"I\"], [\"for\", \"gvisibility\"], [\"type\", \"number\", \"id\", \"gvisibility\"], [\"gvisibility\", \"\"], [\"for\", \"gpartialobs\"], [\"id\", \"gpartialobs\"], [\"gpartialobs\", \"\"], [\"value\", \"few\"], [\"value\", \"scattered\"], [\"value\", \"broken\"], [\"for\", \"gcloudeighths\"], [\"type\", \"range\", \"min\", \"0\", \"max\", \"8\", \"value\", \"3\", 1, \"slider\"], [\"gcloudeighths\", \"\"], [\"for\", \"gcloudtype\"], [\"id\", \"gcloudtype\"], [\"gcloudtype\", \"\"], [\"value\", \"CS\"], [\"value\", \"CC\"], [\"value\", \"AS\"], [\"value\", \"AC\"], [\"value\", \"SC\"], [\"value\", \"NS\"], [\"value\", \"ST\"], [\"value\", \"CU\"], [\"value\", \"CB\"], [\"for\", \"gcloudheight\"], [\"type\", \"number\", \"id\", \"gcloudheight\"], [\"gcloudheight\", \"\"], [\"for\", \"gtemp\"], [\"type\", \"number\", \"id\", \"gtemp\"], [\"gtemp\", \"\"], [\"for\", \"gdewpoint\"], [\"type\", \"number\", \"id\", \"gdewpoint\"], [\"gdewpoint\", \"\"], [\"for\", \"gqnh\"], [\"type\", \"number\", \"id\", \"gqnh\"], [\"gqnh\", \"\"], [\"id\", \"customtab\", 3, \"ngClass\"], [\"for\", \"station\"], [\"id\", \"currentstation\"], [\"currentstation\", \"\"], [4, \"ngFor\", \"ngForOf\"], [\"type\", \"text\", \"id\", \"station\"], [\"station\", \"\"], [\"for\", \"icao\"], [\"type\", \"text\", \"id\", \"icao\"], [\"icao\", \"\"], [\"for\", \"friendlyname\"], [\"type\", \"text\", \"id\", \"friendlyname\"], [\"friendlyname\", \"\"], [\"type\", \"number\", \"id\", \"cwinddirn\"], [\"cwinddirn\", \"\"], [\"for\", \"cwindspeed\"], [\"type\", \"number\", \"id\", \"cwindspeed\"], [\"cwindspeed\", \"\"], [\"for\", \"cgusts\"], [\"type\", \"number\", \"id\", \"cgusts\"], [\"cgusts\", \"\"], [\"for\", \"cturbulence\"], [\"id\", \"cturbulence\"], [\"cturbulence\", \"\"], [\"for\", \"cwindshear\"], [\"id\", \"cwindshear\"], [\"cwindshear\", \"\"], [\"for\", \"cvisibility\"], [\"type\", \"number\", \"id\", \"cvisibility\"], [\"cvisibility\", \"\"], [\"for\", \"cpartialobs\"], [\"id\", \"cpartialobs\"], [\"cpartialobs\", \"\"], [\"for\", \"ccloudeighths\"], [\"ccloudeighths\", \"\"], [\"for\", \"ccloudtype\"], [\"id\", \"ccloudtype\"], [\"ccloudtype\", \"\"], [\"for\", \"ccloudheight\"], [\"type\", \"number\", \"id\", \"ccloudheight\"], [\"ccloudheight\", \"\"], [\"for\", \"csctime\"], [\"type\", \"number\", \"id\", \"csctime\"], [\"csctime\", \"\"], [\"for\", \"ctemp\"], [\"type\", \"number\", \"id\", \"ctemp\"], [\"ctemp\", \"\"], [\"for\", \"cdewpoint\"], [\"type\", \"number\", \"id\", \"cdewpoint\"], [\"cdewpoint\", \"\"], [\"for\", \"cqnh\"], [\"type\", \"number\", \"id\", \"cqnh\"], [\"cqnh\", \"\"], [3, \"value\"]],\n  template: function WeatherComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r38 = i0.ɵɵgetCurrentView();\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\")(2, \"fieldset\", 1)(3, \"legend\");\n      i0.ɵɵtext(4, \"Drop Thermal\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(5, \"cmd-button\", 2)(6, \"cmd-button\", 3);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(7, \"div\", 4);\n      i0.ɵɵelementStart(8, \"div\", 5)(9, \"button\", 6);\n      i0.ɵɵlistener(\"click\", function WeatherComponent_Template_button_click_9_listener($event) {\n        return ctx.selectTab($event, \"themetab\");\n      });\n      i0.ɵɵtext(10, \"Themes\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"button\", 6);\n      i0.ɵɵlistener(\"click\", function WeatherComponent_Template_button_click_11_listener($event) {\n        return ctx.selectTab($event, \"globaltab\");\n      });\n      i0.ɵɵtext(12, \"Global\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"button\", 6);\n      i0.ɵɵlistener(\"click\", function WeatherComponent_Template_button_click_13_listener($event) {\n        return ctx.selectTab($event, \"customtab\");\n      });\n      i0.ɵɵtext(14, \"Custom\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(15, \"div\", 7)(16, \"fieldset\")(17, \"legend\");\n      i0.ɵɵtext(18, \"Weather Themes\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(19, \"div\", 8)(20, \"label\", 9);\n      i0.ɵɵtext(21, \"Weather Themes\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(22, \"select\", 10, 11);\n      i0.ɵɵlistener(\"change\", function WeatherComponent_Template_select_change_22_listener() {\n        i0.ɵɵrestoreView(_r38);\n        const _r0 = i0.ɵɵreference(23);\n        const _r2 = i0.ɵɵreference(26);\n        return i0.ɵɵresetView(ctx.themeSelected(_r0.value, _r2));\n      });\n      i0.ɵɵtemplate(24, WeatherComponent_option_24_Template, 2, 2, \"option\", 12);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(25, \"textarea\", 13, 14);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(27, \"button\", 15);\n      i0.ɵɵlistener(\"click\", function WeatherComponent_Template_button_click_27_listener() {\n        i0.ɵɵrestoreView(_r38);\n        const _r0 = i0.ɵɵreference(23);\n        return i0.ɵɵresetView(ctx.setTheme(_r0.value));\n      });\n      i0.ɵɵtext(28, \"Use Theme\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(29, \"div\", 16)(30, \"div\", null, 17);\n      i0.ɵɵtext(32);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(33, \"button\", 15);\n      i0.ɵɵlistener(\"click\", function WeatherComponent_Template_button_click_33_listener() {\n        return ctx.useGlobal();\n      });\n      i0.ɵɵtext(34, \"Use Global Settings\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(35, \"button\", 15);\n      i0.ɵɵlistener(\"click\", function WeatherComponent_Template_button_click_35_listener() {\n        i0.ɵɵrestoreView(_r38);\n        const _r3 = i0.ɵɵreference(31);\n        return i0.ɵɵresetView(ctx.refresh(_r3));\n      });\n      i0.ɵɵtext(36, \"Refresh\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(37, \"fieldset\")(38, \"legend\");\n      i0.ɵɵtext(39, \"Wind\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(40, \"div\", 8)(41, \"label\", 18);\n      i0.ɵɵtext(42, \"Wind Direction\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(43, \"input\", 19, 20);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(45, \"div\", 8)(46, \"label\", 21);\n      i0.ɵɵtext(47, \"Windspeed(kts)\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(48, \"input\", 22, 23);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(50, \"div\", 8)(51, \"label\", 24);\n      i0.ɵɵtext(52, \"Gusts(kts)\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(53, \"input\", 25, 26);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(55, \"div\", 8)(56, \"label\", 27);\n      i0.ɵɵtext(57, \"Turbulence\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(58, \"select\", 28, 29)(60, \"option\", 30);\n      i0.ɵɵtext(61, \"None\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(62, \"option\", 31);\n      i0.ɵɵtext(63, \"Light\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(64, \"option\", 32);\n      i0.ɵɵtext(65, \"Moderate\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(66, \"option\", 33);\n      i0.ɵɵtext(67, \"Heavy\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(68, \"option\", 34);\n      i0.ɵɵtext(69, \"Severe\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(70, \"div\", 8)(71, \"label\", 35);\n      i0.ɵɵtext(72, \"Windshear\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(73, \"select\", 36, 37)(75, \"option\", 38);\n      i0.ɵɵtext(76, \"Gradual\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(77, \"option\", 32);\n      i0.ɵɵtext(78, \"Moderate\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(79, \"option\", 34);\n      i0.ɵɵtext(80, \"Steep\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(81, \"option\", 39);\n      i0.ɵɵtext(82, \"Instantaneous\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(83, \"button\", 15);\n      i0.ɵɵlistener(\"click\", function WeatherComponent_Template_button_click_83_listener() {\n        i0.ɵɵrestoreView(_r38);\n        const _r5 = i0.ɵɵreference(49);\n        const _r4 = i0.ɵɵreference(44);\n        const _r6 = i0.ɵɵreference(54);\n        const _r7 = i0.ɵɵreference(59);\n        const _r8 = i0.ɵɵreference(74);\n        return i0.ɵɵresetView(ctx.setGlobalWind(_r5.value, _r4.value, _r6.value, _r7.value, _r8.value));\n      });\n      i0.ɵɵtext(84, \"Set Wind\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(85, \"fieldset\")(86, \"legend\");\n      i0.ɵɵtext(87, \"Visibility\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(88, \"div\", 8)(89, \"label\", 40);\n      i0.ɵɵtext(90, \"Visibility (miles)\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(91, \"input\", 41, 42);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(93, \"button\", 15);\n      i0.ɵɵlistener(\"click\", function WeatherComponent_Template_button_click_93_listener() {\n        i0.ɵɵrestoreView(_r38);\n        const _r9 = i0.ɵɵreference(92);\n        return i0.ɵɵresetView(ctx.setGlobalVisibility(_r9.value));\n      });\n      i0.ɵɵtext(94, \"Set Visibility\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(95, \"fieldset\")(96, \"legend\");\n      i0.ɵɵtext(97, \"Partial Obscuration\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(98, \"div\", 8)(99, \"label\", 43);\n      i0.ɵɵtext(100, \"Quanitity\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(101, \"select\", 44, 45)(103, \"option\", 46);\n      i0.ɵɵtext(104, \"few\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(105, \"option\", 47);\n      i0.ɵɵtext(106, \"scattered\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(107, \"option\", 48);\n      i0.ɵɵtext(108, \"broken\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(109, \"button\", 15);\n      i0.ɵɵlistener(\"click\", function WeatherComponent_Template_button_click_109_listener() {\n        i0.ɵɵrestoreView(_r38);\n        const _r10 = i0.ɵɵreference(102);\n        return i0.ɵɵresetView(ctx.setGlobalPartialObscuration(_r10.value));\n      });\n      i0.ɵɵtext(110, \"Set Partial Obscuration\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(111, \"fieldset\")(112, \"legend\");\n      i0.ɵɵtext(113, \"Sky Conditions\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(114, \"div\", 8)(115, \"label\", 49);\n      i0.ɵɵtext(116, \"Cloud Cover (eighths)\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(117, \"input\", 50, 51);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(119, \"div\", 8)(120, \"label\", 52);\n      i0.ɵɵtext(121, \"of type\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(122, \"select\", 53, 54)(124, \"option\", 55);\n      i0.ɵɵtext(125, \"Cirro-stratus\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(126, \"option\", 56);\n      i0.ɵɵtext(127, \"Cirro-cumulus\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(128, \"option\", 57);\n      i0.ɵɵtext(129, \"Alto-stratus\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(130, \"option\", 58);\n      i0.ɵɵtext(131, \"Alto-cumulus\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(132, \"option\", 59);\n      i0.ɵɵtext(133, \"Strato-cumulus\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(134, \"option\", 60);\n      i0.ɵɵtext(135, \"Nimbo-stratus\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(136, \"option\", 61);\n      i0.ɵɵtext(137, \"Stratus\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(138, \"option\", 62);\n      i0.ɵɵtext(139, \"Cumulus\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(140, \"option\", 63);\n      i0.ɵɵtext(141, \"Cumulo-nimbus\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(142, \"div\", 8)(143, \"label\", 64);\n      i0.ɵɵtext(144, \"Cloud Height (feet)\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(145, \"input\", 65, 66);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(147, \"button\", 15);\n      i0.ɵɵlistener(\"click\", function WeatherComponent_Template_button_click_147_listener() {\n        i0.ɵɵrestoreView(_r38);\n        const _r11 = i0.ɵɵreference(118);\n        const _r12 = i0.ɵɵreference(123);\n        const _r13 = i0.ɵɵreference(146);\n        return i0.ɵɵresetView(ctx.setGlobalSkyConditions(_r11.value, _r12.value, _r13.value));\n      });\n      i0.ɵɵtext(148, \"Set Sky Conditions\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(149, \"fieldset\")(150, \"legend\");\n      i0.ɵɵtext(151, \"Temperature\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(152, \"div\", 8)(153, \"label\", 67);\n      i0.ɵɵtext(154, \"Surace Temp (C)\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(155, \"input\", 68, 69);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(157, \"div\", 8)(158, \"label\", 70);\n      i0.ɵɵtext(159, \"Dewpoint (C)\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(160, \"input\", 71, 72);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(162, \"button\", 15);\n      i0.ɵɵlistener(\"click\", function WeatherComponent_Template_button_click_162_listener() {\n        i0.ɵɵrestoreView(_r38);\n        const _r14 = i0.ɵɵreference(156);\n        const _r15 = i0.ɵɵreference(161);\n        return i0.ɵɵresetView(ctx.setGlobalTemperature(_r14.value, _r15.value));\n      });\n      i0.ɵɵtext(163, \"Set Temperature\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(164, \"fieldset\")(165, \"legend\");\n      i0.ɵɵtext(166, \"Altimeter (QNH)\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(167, \"div\", 8)(168, \"label\", 73);\n      i0.ɵɵtext(169, \"QNH (hPa)\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(170, \"input\", 74, 75);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(172, \"button\", 15);\n      i0.ɵɵlistener(\"click\", function WeatherComponent_Template_button_click_172_listener() {\n        i0.ɵɵrestoreView(_r38);\n        const _r16 = i0.ɵɵreference(171);\n        return i0.ɵɵresetView(ctx.setGlobalQNH(_r16.value));\n      });\n      i0.ɵɵtext(173, \"Set QNH\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(174, \"div\", 76)(175, \"fieldset\")(176, \"legend\");\n      i0.ɵɵtext(177, \"Custom Weather\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(178, \"button\", 15);\n      i0.ɵɵlistener(\"click\", function WeatherComponent_Template_button_click_178_listener() {\n        return ctx.useCustom();\n      });\n      i0.ɵɵtext(179, \"Use Custom Settings\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(180, \"button\", 15);\n      i0.ɵɵlistener(\"click\", function WeatherComponent_Template_button_click_180_listener() {\n        i0.ɵɵrestoreView(_r38);\n        const _r17 = i0.ɵɵreference(186);\n        return i0.ɵɵresetView(ctx.refreshStations(_r17));\n      });\n      i0.ɵɵtext(181, \"Refresh Stations\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(182, \"div\", 8)(183, \"label\", 77);\n      i0.ɵɵtext(184, \"Use this Airfield\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(185, \"select\", 78, 79);\n      i0.ɵɵtemplate(187, WeatherComponent_option_187_Template, 2, 1, \"option\", 80);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(188, \"fieldset\")(189, \"legend\");\n      i0.ɵɵtext(190, \"Add Station\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(191, \"div\")(192, \"div\", 8)(193, \"label\", 77);\n      i0.ɵɵtext(194, \"ICAO Airfield\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(195, \"input\", 81, 82);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(197, \"button\", 15);\n      i0.ɵɵlistener(\"click\", function WeatherComponent_Template_button_click_197_listener() {\n        i0.ɵɵrestoreView(_r38);\n        const _r19 = i0.ɵɵreference(196);\n        const _r17 = i0.ɵɵreference(186);\n        return i0.ɵɵresetView(ctx.addCustom(_r19.value, _r17));\n      });\n      i0.ɵɵtext(198, \"Add Station\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(199, \"div\")(200, \"div\", 8)(201, \"label\", 83);\n      i0.ɵɵtext(202, \"ICAO Airfield\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(203, \"input\", 84, 85);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(205, \"div\", 8)(206, \"label\", 86);\n      i0.ɵɵtext(207, \"Airfield Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(208, \"input\", 87, 88);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(210, \"button\", 15);\n      i0.ɵɵlistener(\"click\", function WeatherComponent_Template_button_click_210_listener() {\n        i0.ɵɵrestoreView(_r38);\n        const _r20 = i0.ɵɵreference(204);\n        const _r21 = i0.ɵɵreference(209);\n        const _r17 = i0.ɵɵreference(186);\n        return i0.ɵɵresetView(ctx.addCustomHere(_r20.value, _r21.value, _r17));\n      });\n      i0.ɵɵtext(211, \"Add Station Here\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(212, \"fieldset\")(213, \"legend\");\n      i0.ɵɵtext(214, \"Wind\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(215, \"div\", 8)(216, \"label\", 18);\n      i0.ɵɵtext(217, \"Wind Direction\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(218, \"input\", 89, 90);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(220, \"div\", 8)(221, \"label\", 91);\n      i0.ɵɵtext(222, \"Windspeed(kts)\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(223, \"input\", 92, 93);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(225, \"div\", 8)(226, \"label\", 94);\n      i0.ɵɵtext(227, \"Gusts(kts)\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(228, \"input\", 95, 96);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(230, \"div\", 8)(231, \"label\", 97);\n      i0.ɵɵtext(232, \"Turbulence\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(233, \"select\", 98, 99)(235, \"option\", 30);\n      i0.ɵɵtext(236, \"None\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(237, \"option\", 31);\n      i0.ɵɵtext(238, \"Light\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(239, \"option\", 32);\n      i0.ɵɵtext(240, \"Moderate\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(241, \"option\", 33);\n      i0.ɵɵtext(242, \"Heavy\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(243, \"option\", 34);\n      i0.ɵɵtext(244, \"Severe\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(245, \"div\", 8)(246, \"label\", 100);\n      i0.ɵɵtext(247, \"Windshear\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(248, \"select\", 101, 102)(250, \"option\", 38);\n      i0.ɵɵtext(251, \"Gradual\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(252, \"option\", 32);\n      i0.ɵɵtext(253, \"Moderate\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(254, \"option\", 34);\n      i0.ɵɵtext(255, \"Steep\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(256, \"option\", 39);\n      i0.ɵɵtext(257, \"Instantaneous\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(258, \"button\", 15);\n      i0.ɵɵlistener(\"click\", function WeatherComponent_Template_button_click_258_listener() {\n        i0.ɵɵrestoreView(_r38);\n        const _r17 = i0.ɵɵreference(186);\n        const _r23 = i0.ɵɵreference(224);\n        const _r22 = i0.ɵɵreference(219);\n        const _r24 = i0.ɵɵreference(229);\n        const _r25 = i0.ɵɵreference(234);\n        const _r26 = i0.ɵɵreference(249);\n        return i0.ɵɵresetView(ctx.setCustomWind(_r17.value, _r23.value, _r22.value, _r24.value, _r25.value, _r26.value));\n      });\n      i0.ɵɵtext(259, \"Set Wind\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(260, \"fieldset\")(261, \"legend\");\n      i0.ɵɵtext(262, \"Visibility\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(263, \"div\", 8)(264, \"label\", 103);\n      i0.ɵɵtext(265, \"Visibility (miles)\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(266, \"input\", 104, 105);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(268, \"button\", 15);\n      i0.ɵɵlistener(\"click\", function WeatherComponent_Template_button_click_268_listener() {\n        i0.ɵɵrestoreView(_r38);\n        const _r17 = i0.ɵɵreference(186);\n        const _r27 = i0.ɵɵreference(267);\n        return i0.ɵɵresetView(ctx.setCustomVisibility(_r17.value, _r27.value));\n      });\n      i0.ɵɵtext(269, \"Set Visibility\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(270, \"fieldset\")(271, \"legend\");\n      i0.ɵɵtext(272, \"Partial Obscuration\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(273, \"div\", 8)(274, \"label\", 106);\n      i0.ɵɵtext(275, \"Quanitity\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(276, \"select\", 107, 108)(278, \"option\", 46);\n      i0.ɵɵtext(279, \"few\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(280, \"option\", 47);\n      i0.ɵɵtext(281, \"scattered\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(282, \"option\", 48);\n      i0.ɵɵtext(283, \"broken\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(284, \"button\", 15);\n      i0.ɵɵlistener(\"click\", function WeatherComponent_Template_button_click_284_listener() {\n        i0.ɵɵrestoreView(_r38);\n        const _r17 = i0.ɵɵreference(186);\n        const _r28 = i0.ɵɵreference(277);\n        return i0.ɵɵresetView(ctx.setCustomPartialObscuration(_r17.value, _r28.value));\n      });\n      i0.ɵɵtext(285, \"Set Partial Obscuration\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(286, \"fieldset\")(287, \"legend\");\n      i0.ɵɵtext(288, \"Sky Conditions\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(289, \"div\", 8)(290, \"label\", 109);\n      i0.ɵɵtext(291, \"Eighths\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(292, \"input\", 50, 110);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(294, \"div\", 8)(295, \"label\", 111);\n      i0.ɵɵtext(296, \"of type\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(297, \"select\", 112, 113)(299, \"option\", 55);\n      i0.ɵɵtext(300, \"Cirro-stratus\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(301, \"option\", 56);\n      i0.ɵɵtext(302, \"Cirro-cumulus\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(303, \"option\", 57);\n      i0.ɵɵtext(304, \"Alto-stratus\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(305, \"option\", 58);\n      i0.ɵɵtext(306, \"Alto-cumulus\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(307, \"option\", 59);\n      i0.ɵɵtext(308, \"Strato-cumulus\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(309, \"option\", 60);\n      i0.ɵɵtext(310, \"Nimbo-stratus\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(311, \"option\", 61);\n      i0.ɵɵtext(312, \"Stratus\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(313, \"option\", 62);\n      i0.ɵɵtext(314, \"Cumulus\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(315, \"option\", 63);\n      i0.ɵɵtext(316, \"Cumulo-nimbus\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(317, \"div\", 8)(318, \"label\", 114);\n      i0.ɵɵtext(319, \"Cloud Height (feet)\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(320, \"input\", 115, 116);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(322, \"div\", 8)(323, \"label\", 117);\n      i0.ɵɵtext(324, \"Transition (seconds)\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(325, \"input\", 118, 119);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(327, \"button\", 15);\n      i0.ɵɵlistener(\"click\", function WeatherComponent_Template_button_click_327_listener() {\n        i0.ɵɵrestoreView(_r38);\n        const _r17 = i0.ɵɵreference(186);\n        const _r29 = i0.ɵɵreference(293);\n        const _r30 = i0.ɵɵreference(298);\n        const _r31 = i0.ɵɵreference(321);\n        const _r32 = i0.ɵɵreference(326);\n        return i0.ɵɵresetView(ctx.setCustomSkyConditions(_r17.value, _r29.value, _r30.value, _r31.value, _r32.value));\n      });\n      i0.ɵɵtext(328, \"Set Sky Conditions\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(329, \"fieldset\")(330, \"legend\");\n      i0.ɵɵtext(331, \"Temperature\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(332, \"div\", 8)(333, \"label\", 120);\n      i0.ɵɵtext(334, \"Surace Temp (C)\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(335, \"input\", 121, 122);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(337, \"div\", 8)(338, \"label\", 123);\n      i0.ɵɵtext(339, \"Dewpoint (C)\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(340, \"input\", 124, 125);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(342, \"button\", 15);\n      i0.ɵɵlistener(\"click\", function WeatherComponent_Template_button_click_342_listener() {\n        i0.ɵɵrestoreView(_r38);\n        const _r17 = i0.ɵɵreference(186);\n        const _r33 = i0.ɵɵreference(336);\n        const _r34 = i0.ɵɵreference(341);\n        return i0.ɵɵresetView(ctx.setCustomTemperature(_r17.value, _r33.value, _r34.value));\n      });\n      i0.ɵɵtext(343, \"Set Temperature\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(344, \"fieldset\")(345, \"legend\");\n      i0.ɵɵtext(346, \"Altimeter (QNH)\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(347, \"div\", 8)(348, \"label\", 126);\n      i0.ɵɵtext(349, \"QNH (hPa)\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(350, \"input\", 127, 128);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(352, \"button\", 15);\n      i0.ɵɵlistener(\"click\", function WeatherComponent_Template_button_click_352_listener() {\n        i0.ɵɵrestoreView(_r38);\n        const _r17 = i0.ɵɵreference(186);\n        const _r35 = i0.ɵɵreference(351);\n        return i0.ɵɵresetView(ctx.setCustomQNH(_r17.value, _r35.value));\n      });\n      i0.ɵɵtext(353, \"Set QNH\");\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(9);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction0(9, _c0));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction0(10, _c1));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction0(11, _c1));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction0(12, _c2));\n      i0.ɵɵadvance(9);\n      i0.ɵɵproperty(\"ngForOf\", ctx.getThemes());\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction0(13, _c3));\n      i0.ɵɵadvance(3);\n      i0.ɵɵtextInterpolate(ctx.getGlobalMetar());\n      i0.ɵɵadvance(142);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction0(14, _c3));\n      i0.ɵɵadvance(13);\n      i0.ɵɵproperty(\"ngForOf\", ctx.getStations());\n    }\n  },\n  dependencies: [i2.NgClass, i2.NgForOf, i3.NgSelectOption, i3.ɵNgSelectMultipleOption, i4.CmdbuttonComponent],\n  styles: [\"#theme_description[_ngcontent-%COMP%]{width:100%;height:7em}\"]\n});","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}